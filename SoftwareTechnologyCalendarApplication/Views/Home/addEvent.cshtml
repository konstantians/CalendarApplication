@model SoftwareTechnologyCalendarApplication.Models.Event

@{
    ViewData["Title"] = "addEvent";
    // placeholder=@Model.Title
}
<style>
    .notification-box {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 10px;
        margin-bottom: 5px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #fafafa
    }

    .notification-title {
        margin: 0;
    }

    .notification-btn {
        border: none;
        background: none;
        cursor: pointer;
    }

    .notification-check-btn {
        color: blue;
    }

    .notification-close-btn {
        color: red;
    }

    .marker {
    }

</style>
<!--<style>
    .mul-select {
        width: 100%;
    }
</style>-->
<h1 class="text-center">Let's add a new event!</h1>

<h4 class="text-center">Please fill out the following form:</h4>
<hr />

<form asp-action="addEvent">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @*@Html.DropDownList()*@
    <!--<label for="invitations">Who do you want to invite?</label><br />
    <select name="invitations" id="invitations" class="mul-select" multiple>
        <option value="EliasLgt">EliasLgt</option>
        <option value="Kinnas">Kinnas</option>
    </select>-->
    <div class="row">
        <div class="col-md-5">
            <div style="margin-top: 25px;">
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" id="title" class="form-control" placeholder="Title"/>
                    <span asp-validation-for="Title" class="text-danger"></span>
                    <span class="text-danger" id="titleProblem" style="display:none">You need to provide a title for the event before submiting.</span>
                </div>
            </div>
            <div style="margin-top: 15px;">
                <div class="form-group">
                    <label asp-for="StartingTime" class="control-label"></label>
                    <input asp-for="StartingTime" id="startingtime" class="form-control" />
                    <span asp-validation-for="StartingTime" class="text-danger"></span>
                    <span class="text-danger" id="startProblem" style="display:none">
                        The minute field of the starting time of the event must be :00 or :30.Nothing else.
                    </span>
                </div>
            </div>
            <div style="margin-top: 15px;">
                <div class="form-group">
                    <label asp-for="EndingTime" class="control-label"></label>
                    <input asp-for="EndingTime" id="endingtime" class="form-control" />
                    <span asp-validation-for="EndingTime" class="text-danger"></span>
                    <span class="text-danger" id="endProblem" style="display:none">
                        The minute field of the ending time of the event must be :00 or :30.Nothing else.
                    </span>
                </div>
            </div>
        </div>

        <div class="col-md-5 offset-md-1">
            <div class="row" style="margin-top: 25px;">
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea asp-for="Description" class="form-control" rows="4" cols="65" placeholder="Description"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>
            <div class="row" style="margin-top: 50px; margin-left: 10px;">
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="AlertStatus" /> I want to be notified when the event begins
                    </label>
                </div>
            </div>
        </div>
    </div>
    <!--<div class="row">
        <div class="form-group">
            <label for="invitations">Who do you want to invite?</label><br />
            <select name="invitations" id="invitations" class="mul-select"  multiple="multiple">
                <option value="EliasLgt">EliasLgt</option>
                <option value="Kinnas">Kinnas</option>
            </select>
        </div>
    </div>-->
    <div class="row" style="margin-top: 25px;">
        <div class="col-md-5">
            <label for="Invitation">Who do you want add to the invitation list?</label>
            <select name="Invitation" class="form-control" id="Invitation" onchange="addInvitation()">
                <option value="">Choose One Of The Users Of The App</option>
                @for (int i = 0; i <= (int)ViewData["LastNumber"]; i++)
                {
                    if (ViewData[i.ToString()] != ViewData["usernm"])
                    {
                        <option value="@ViewData[i.ToString()]">@ViewData[i.ToString()]</option>
                    }
                }
            </select>
        </div>
        <div class="col-md-5 offset-md-1" id="invited">
            Invitations to be sent:
        </div>
    </div>

    <input type="hidden" name="calendarId" value="@ViewData["CalendarId"]" />
    <input type="hidden" name="year" value="@ViewData["Year"]" />
    <input type="hidden" name="month" value="@ViewData["Month"]" />
    <input type="hidden" name="day" value="@ViewData["Day"]" />
    <div class="d-flex justify-content-center" style="margin-top: 35px;">
        <a class="btn btn-outline-primary" asp-controller="Home" asp-action="ViewCalendarDay" asp-route-calendarId="@ViewData["CalendarId"]"
           asp-route-year="@ViewData["Year"]" asp-route-month="@ViewData["Month"]" asp-route-day="@ViewData["Day"]">Back to Calendar</a>
        <div class="ml-3">
            <input type="submit" value="Create new event" onclick="return Validation();" class="btn btn-outline-primary" />
        </div>
    </div>
</form>
<div class="row align-items-center">
    <div class="mx-auto col-md-5">
        <span class="text-danger" id="start>endProblem" style="display:none">
            The starting time of the event cannot be greater than or equal to the ending time.
        </span>
    </div>
</div>


<script>
    function addInvitation() {
        var x = document.getElementById("Invitation").value;
        if (x==""){
            return 0;
        }
        console.log(x);
        const newDiv = document.createElement("div");
        newDiv.id = x;
        newDiv.innerText=x;
        newDiv.classList.add("notification-box");
        const newButton = document.createElement("button");
        newButton.type="button";
        newButton.innerText="Remove";
        newButton.classList.add("btn");
        newButton.classList.add("btn-outline-danger");
        //newButton.onclick("document.getElementById('x').remove()");
        newButton.onclick = function () {
            document.getElementById(x).remove();
        };
        const newSpan = document.createElement("span");
        document.getElementById("invited").appendChild(newDiv);
        newDiv.appendChild(newSpan);
        newSpan.appendChild(newButton);
        //document.getElementById("demo").innerHTML = "You selected: " + x;
    }
    function DeleteSpecificDiv(){

    }
</script>

<script type="text/javascript">
    //function closeModal(id){
    //    let modal = document.getElementById(id);
    //    modal.style.display='none';
    //}
    function Validation(){
        if (document.getElementById("startProblem").style.display=="block"){
            hideDisplayAlert("startProblem");
        }
        if (document.getElementById("endProblem").style.display=="block"){
            hideDisplayAlert("endProblem");
        }
        if (document.getElementById("start>endProblem").style.display == "block") {
            hideDisplayAlert("start>endProblem");
        }
        if (document.getElementById("titleProblem").style.display == "block") {
            hideDisplayAlert("titleProblem");
        }
        let i=0;
        var startingTime = document.getElementById("startingtime").value;
        var endingTime = document.getElementById("endingtime").value;
        const Start = Date.parse(startingTime);
        const End = Date.parse(endingTime);
        let minsOfStart=startingTime.split(":")[1];
        let minsOfEnd = endingTime.split(":")[1];
        console.log(startingTime);
        console.log(typeof startingTime);
        if (minsOfStart != "00" && minsOfStart != "30") {
            hideDisplayAlert("startProblem")//document.getElementById("startProblem").style.display='block';  //hideDisplayAlert("startProblem")//alert("The minute field of the starting time of the event must be :00 or :30. Nothing else."); //na kano unhidden to ena alert <div> opos tou kinna
            i=1;
        }
        if (minsOfEnd != "00" && minsOfEnd != "30") {
            hideDisplayAlert("endProblem")//alert("The minute field of the ending time of the event must be :00 or :30. Nothing else.");
            i=1;
        }
        if (Start >= End){
            hideDisplayAlert("start>endProblem")//alert("The starting time of the event must cannot be greater than or equal to the ending time.");
            i=1;
        }
        var title = document.getElementById("title").value;
        if (title == null || title == "") {
            hideDisplayAlert("titleProblem")//alert("You need to provide a title for the event before submiting.");
            i=1;
        }
        if(i!=0){
            return false;
        }
    }
</script>

<script type="text/javascript">
    function hideDisplayAlert(id){
        let alertDiv = document.getElementById(id);
        if (alertDiv.style.display == "none"){
            alertDiv.style.display = "block";
        }
        else{
            alertDiv.style.display = "none";
        }
    }
</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
