@model SoftwareTechnologyCalendarApplication.Models.Event

@{
    ViewData["Title"] = "addEvent";
    // placeholder=@Model.Title
}
<!--    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
        <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
            <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
        </symbol>
    </svg>
<div class="alert alert-danger d-flex align-items-center alert-dismissible fade show" role="alert" id="startProblem">
        <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill" /></svg>
        <div>
            The minute field of the starting time of the event must be :00 or :30. Nothing else.
        </div>
        <button type="button" class="close" onclick="hideDisplayAlert(startProblem)">&times;</button> data-dismiss="alert">&times;</button>
</div>

    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
        <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
            <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
        </symbol>
    </svg>
<div class="alert alert-danger d-flex align-items-center alert-dismissible fade show" role="alert" id="endProblem">
        <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill" /></svg>
        <div>
            The minute field of the ending time of the event must be :00 or :30. Nothing else.
        </div>
        <button type="button" class="close" onclick="hideDisplayAlert(endProblem)">&times;</button> data-dismiss="alert">&times;</button>
    </div>

    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
        <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
            <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
        </symbol>
    </svg>
<div class="alert alert-danger d-flex align-items-center alert-dismissible fade show" role="alert" id="start>endProblem">
        <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill" /></svg>
        <div>
            The starting time of the event cannot be greater than or equal to the ending time.
        </div>
        <button type="button" class="close" onclick="hideDisplayAlert(start>endProblem)">&times;</button>data-dismiss="alert">&times;</button>
    </div>
    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
        <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
            <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
        </symbol>
    </svg>
<div class="alert alert-danger d-flex align-items-center alert-dismissible fade show" role="alert" id="titleProblem">
        <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill" /></svg>
        <div>
            The starting time of the event must cannot be greater than or equal to the ending time.
        </div>
        <button type="button" class="close" onclick="hideDisplayAlert(titleProblem)">&times;</button> data-dismiss="alert">&times;</button>
</div>-->

<!--<div class="modal fade" id="startProblem">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Warning!</h2>
            </div>
            <div class="modal-body">
                <p>The minute field of the starting time of the event must be :00 or :30.
                    Nothing else.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="closeModal('startProblem')">Understood</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="endProblem">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Warning!</h2>
            </div>
            <div class="modal-body">
                <p>
                    The minute field of the ending time of the event must be :00 or :30.
                    Nothing else.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="closeModal('endProblem')">Understood</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="start>endProblem">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Warning!</h2>
            </div>
            <div class="modal-body">
                <p>
                    The starting time of the event cannot be greater than or equal to the ending time.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="closeModal('start>endProblem')">Understood</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="titleProblem">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Warning!</h2>
            </div>
            <div class="modal-body">
                <p>
                    You need to provide a title for the event before submiting.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="closeModal('titleProblem')">Understood</button>
            </div>
        </div>
    </div>
</div>-->

<h1 class="text-center">Let's add a new event!</h1>

<h4 class="text-center">Please fill out the following form:</h4>
<hr />
<!--<input id="username" name="username" value="@ViewData["User"]" hidden />
<input id="calendarId" name="calendarId" value="@ViewData["CalendarId"]" hidden />-->

<form asp-action="addEvent" asp-route-username="@ViewData["User"]" asp-route-calendarId="@ViewData["CalendarId"]" onsubmit="return Validation()">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <!--<input id="username" name="username" value="@ViewData["User"]" hidden/>
    <input id="calendarId" name="calendarId" value="@ViewData["CalendarId"]" hidden />-->
    <div class="row">
        <div class="col-md-5">
            <div style="margin-top: 25px;">
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" id="title" class="form-control"/>
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
            </div>
            <div style="margin-top: 15px;">
                <div class="form-group">
                    <label asp-for="StartingTime" class="control-label"></label>
                    <input asp-for="StartingTime" id="startingtime" class="form-control"/>
                    <span asp-validation-for="StartingTime" class="text-danger"></span>
                </div>
            </div>
            <div style="margin-top: 15px;">
                <div class="form-group">
                    <label asp-for="EndingTime" class="control-label"></label>
                    <input asp-for="EndingTime" id="endingtime" class="form-control"/>
                    <span asp-validation-for="EndingTime" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="col-md-5 offset-md-1">
            <div class="row" style="margin-top: 25px;">
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea asp-for="Description" class="form-control" rows="4" cols="65"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>
            <div class="row" style="margin-top: 50px; margin-left: 10px;">
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="AlertStatus" /> I want to be notified when the event begins
                    </label>
                </div>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-center" style="margin-top: 35px;">
            <a class="btn btn-outline-primary" asp-action="Index">Back to Calendar</a>
            <div class="ml-3">
            <input type="submit" value="Create new event" class="btn btn-outline-primary" />
            </div>
    </div>

</form>


<script type="text/javascript">
    //function closeModal(id){
    //    let modal = document.getElementById(id);
    //    modal.style.display='none';
    //}
    function Validation(){
        var startingTime = document.getElementById("startingtime").value;
        var endingTime = document.getElementById("endingtime").value;
        const Start = Date.parse(startingTime);
        const End = Date.parse(endingTime);
        let minsOfStart=startingTime.split(":")[1];
        let minsOfEnd = endingTime.split(":")[1];
        if (minsOfStart != "00" && minsOfStart != "30") { 
            document.getElementById("startProblem").style.display='block';  //hideDisplayAlert("startProblem")//alert("The minute field of the starting time of the event must be :00 or :30. Nothing else."); //na kano unhidden to ena alert <div> opos tou kinna
            return false;
        }
        if (minsOfEnd != "00" && minsOfEnd != "30") {
            hideDisplayAlert("endProblem")//alert("The minute field of the ending time of the event must be :00 or :30. Nothing else.");
            return false;
        }
        if (Start >= End){
            hideDisplayAlert("start>endProblem")//alert("The starting time of the event must cannot be greater than or equal to the ending time.");
            return false;
        }
        var title = document.getElementById("title").value;
        if (title == null || title == "") {
            hideDisplayAlert("titleProblem")//alert("You need to provide a title for the event before submiting.");
            return false;
        }
    }
</script>

<script type="text/javascript">
    function hideDisplayAlert(id){
        let alertDiv = document.getElementById(id);
        if (alertDiv.style.display == "none"){
            alertDiv.style.display = "initial";
        }
        else{
            alertDiv.style.display = "none";
        }
    }
</script>

<!--<script type="text/javascript">
    function UsernameAndCalId() {
        var inpuut1 = document.getElementById("username");
        var inpuut2 = document.getElementById("calendarId");
        inpuut1.setAttribute("value", @ViewData["User"]);
        inpuut2.setAttribute("value", @ViewData["CalendarId"]);
        if (inpuut1.getAttribute("value")) {
            
        } else {
            inpuut1.setAttribute("value", @ViewData["User"]);
            inpuut2.setAttribute("value", @ViewData["CalendarId"]);
        }

    }
</script>-->

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
